{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.14.85.62628",
      "templateHash": "3144291058484187620"
    }
  },
  "variables": {
    "routeTables_all_to_firewall_we_name": "all-to-firewall-we",
    "routeTables_all_to_firewall_ne_name": "all-to-firewall-ne",
    "ipGroups_all_spokes_subnets_name": "all-spokes-subnets",
    "hublabName": "hub-lab-net",
    "spoke01Name": "spoke-01",
    "spoke02Name": "spoke-02",
    "spoke03Name": "spoke-03",
    "firewallPolicyName": "my-firewall-policy",
    "firewallName": "lab-firewall",
    "locationWE": "westeurope",
    "locationNE": "northeurope"
  },
  "resources": [
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2020-05-01",
      "name": "[variables('routeTables_all_to_firewall_we_name')]",
      "location": "[variables('locationWE')]",
      "properties": {
        "disableBgpRoutePropagation": false,
        "routes": [
          {
            "name": "all-to-firewall-we",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "10.12.3.4"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2020-05-01",
      "name": "[variables('routeTables_all_to_firewall_ne_name')]",
      "location": "[variables('locationNE')]",
      "properties": {
        "disableBgpRoutePropagation": false,
        "routes": [
          {
            "name": "all-to-firewall-ne",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "10.12.3.4"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/default', variables('spoke01Name'))]",
      "properties": {
        "addressPrefix": "10.13.1.0/26",
        "routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_we_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_we_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/services', variables('spoke01Name'))]",
      "properties": {
        "addressPrefix": "10.13.1.64/26",
        "routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_we_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_we_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/default', variables('spoke02Name'))]",
      "properties": {
        "addressPrefix": "10.13.2.0/26",
        "routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_we_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_we_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/services', variables('spoke02Name'))]",
      "properties": {
        "addressPrefix": "10.13.2.64/26",
        "routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_we_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_we_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/default', variables('spoke03Name'))]",
      "properties": {
        "addressPrefix": "10.13.3.0/26",
        "routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_ne_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_ne_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/services', variables('spoke03Name'))]",
      "properties": {
        "addressPrefix": "10.13.3.64/26",
        "routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_ne_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_ne_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/ipGroups",
      "apiVersion": "2020-05-01",
      "name": "[variables('ipGroups_all_spokes_subnets_name')]",
      "location": "[variables('locationWE')]",
      "properties": {
        "ipAddresses": [
          "10.13.1.0/24",
          "10.13.2.0/24",
          "10.13.3.0/24"
        ]
      }
    },
    {
      "type": "Microsoft.Network/firewallPolicies",
      "apiVersion": "2020-05-01",
      "name": "[variables('firewallPolicyName')]",
      "location": "[variables('locationWE')]",
      "properties": {
        "threatIntelMode": "Alert",
        "sku": {
          "tier": "Premium"
        }
      }
    },
    {
      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/{1}', variables('firewallPolicyName'), 'DefaultApplicationRuleCollectionGroup')]",
      "properties": {
        "priority": 200,
        "ruleCollections": [
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "name": "internet-out-collection",
            "priority": 1000,
            "action": {
              "type": "Allow"
            },
            "rules": [
              {
                "ruleType": "ApplicationRule",
                "name": "allow-internet-traffic-out",
                "protocols": [
                  {
                    "protocolType": "Http",
                    "port": 80
                  },
                  {
                    "protocolType": "Https",
                    "port": 443
                  }
                ],
                "targetFqdns": [
                  "*"
                ],
                "sourceIpGroups": [
                  "[resourceId('Microsoft.Network/ipGroups', variables('ipGroups_all_spokes_subnets_name'))]"
                ]
              }
            ]
          },
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "name": "block-some-stuff",
            "priority": 900,
            "action": {
              "type": "Deny"
            },
            "rules": [
              {
                "ruleType": "ApplicationRule",
                "name": "block-facebook",
                "protocols": [
                  {
                    "protocolType": "Http",
                    "port": 80
                  },
                  {
                    "protocolType": "Https",
                    "port": 443
                  }
                ],
                "targetFqdns": [
                  "*.facebook.com,facebook.com"
                ],
                "sourceIpGroups": [
                  "[resourceId('Microsoft.Network/ipGroups', variables('ipGroups_all_spokes_subnets_name'))]"
                ],
                "terminateTLS": false,
                "targetUrls": [],
                "destinationAddresses": [],
                "sourceAddresses": [],
                "fqdnTags": [],
                "webCategories": []
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/ipGroups', variables('ipGroups_all_spokes_subnets_name'))]",
        "[resourceId('Microsoft.Network/firewallPolicies', variables('firewallPolicyName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/{1}', variables('firewallPolicyName'), 'DefaultNetworkRuleCollectionGroup')]",
      "properties": {
        "priority": 300,
        "ruleCollections": [
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "name": "any-to-any-collection",
            "priority": 1000,
            "action": {
              "type": "Allow"
            },
            "rules": [
              {
                "ruleType": "NetworkRule",
                "name": "allow-spoke-to-spoke-traffic",
                "ipProtocols": [
                  "Any"
                ],
                "sourceIpGroups": [
                  "[resourceId('Microsoft.Network/ipGroups', variables('ipGroups_all_spokes_subnets_name'))]"
                ],
                "destinationPorts": [
                  "*"
                ],
                "destinationIpGroups": [
                  "[resourceId('Microsoft.Network/ipGroups', variables('ipGroups_all_spokes_subnets_name'))]"
                ]
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/ipGroups', variables('ipGroups_all_spokes_subnets_name'))]",
        "[resourceId('Microsoft.Network/firewallPolicies', variables('firewallPolicyName'))]"
      ]
    }
  ]
}